@startuml
class org.ull.dap.app.notifier.CryptocurrencyNotifier {
- List<IObserver> observers
- IConnectionAPI connectionAPI
- List<String> namesCryptocurrencies
- List<Asset> assets
- int TIME_TO_NOTIFY
+ void subscribe(IObserver)
+ void unsubscribe(IObserver)
+ List<IObserver> getObservers()
+ void notifyObservers()
+ void start()
}
class org.ull.dap.app.gui.VentanaNotificacion {
- int alternador
- JPanel contentPane
- JPanel pnNotificacion
- JPanel pnTitulo
- JLabel lblImagen1
- JLabel lblTitulo
- JLabel lblImagen2
- JPanel pnPieDeVentana
- JLabel lblPie
- JScrollPane scpnCrypto
- JPanel pnCrypto
- JPanel getPnNotificacion()
- JPanel getPanel_1()
- JLabel getLabel_1()
- JLabel getLabel_2()
- JLabel getLabel_3()
+ ImageIcon resizeIcon(ImageIcon,int,int)
- JPanel getPnPieDeVentana()
- JLabel getLblPie()
- JScrollPane getScpnCrypto()
- JPanel getPnCrypto()
+ void crearNotificacion(String,String,double)
}
class org.ull.dap.app.enitity.Data {
- String id
- int rank
- String symbol
- String name
- double supply
- double maxSupply
- double marketCapUsd
- double volumeUsd24Hr
- double priceUsd
- double changePercent24Hr
- double vwap24Hr
- String explorer
+ String getId()
+ void setId(String)
+ int getRank()
+ void setRank(int)
+ String getSymbol()
+ void setSymbol(String)
+ String getName()
+ void setName(String)
+ double getSupply()
+ void setSupply(double)
+ double getMaxSupply()
+ void setMaxSupply(double)
+ double getMarketCapUsd()
+ void setMarketCapUsd(double)
+ double getVolumeUsd24Hr()
+ void setVolumeUsd24Hr(double)
+ double getPriceUsd()
+ void setPriceUsd(double)
+ double getChangePercent24Hr()
+ void setChangePercent24Hr(double)
+ double getVwap24Hr()
+ void setVwap24Hr(double)
+ String getExplorer()
+ void setExplorer(String)
+ String toString()
}
class org.ull.dap.app.enitity.Asset {
- Data data
- String timestamp
+ Data getData()
+ void setData(Data)
+ String getTimestamp()
+ void setTimestamp(String)
+ String toString()
}
class org.ull.dap.app.gui.VentanaPrincipal {
- List<IObserver> usuarios
- JPanel contentPane
- JPanel panel
- JButton btnLogin
- JLabel lblNombre
- JLabel lblFondo
- JCheckBox chckbxUser1
- JCheckBox chckbxUser2
- JCheckBox chckbxUser3
- Observable cryptocurrencyNotifier
- JPanel pnSelCrypto
- JComboBox<IObserver> comboBox
- JLabel lblBitcoin
- JLabel lblEthereum
- JLabel lblCardano
- JLabel lblLitecoin
- JLabel lblBitcoinImagen
- JLabel lblEthereumImagen
- JLabel lblCardanoImagen
- JLabel lblLitecoinImagen
- JButton btnStart
- JButton btnAddBitcoin
- JButton btnDeleteBitcoin
- JButton btnAddEthereum
- JButton btnDeleteEthereum
- JButton btnAddCardano
- JButton btnDeleteCardano
- JButton btnAddLitecoin
- JButton btnDeleteLitecoin
- JLabel lblUser
- JPanel getPanel()
- JButton getBtnLogin()
- void pasarSiguientePesta√±a()
- void rellenarComboBox()
- void suscribirUsuarios()
- JLabel getLblNombre()
- JLabel getLblFondo()
+ ImageIcon resizeIcon(ImageIcon,int,int)
- JCheckBox getChckbxUser1()
- JCheckBox getChckbxUser2()
- JCheckBox getChckbxUser3()
- JPanel getPnSelCrypto()
- JComboBox<IObserver> getComboBox()
- JLabel getLblBitcoin()
- JLabel getLblEthereum()
- JLabel getLblCardano()
- JLabel getLblLitecoin()
- JLabel getLblBitcoinImagen()
- JLabel getLblEthereumImagen()
- JLabel getLblCardanoImagen()
- JLabel getLblLitecoinImagen()
- JButton getBtnStart()
- boolean comprobarTodosTienenCryptos()
- void realizarStartEnSegundoPlano()
- JButton getBtnAddBitcoin()
- JButton getBtnDeleteBitcoin()
- JButton getBtnAddEthereum()
- JButton getBtnDeleteEthereum()
- JButton getBtnAddCardano()
- JButton getBtnDeleteCardano()
- JButton getBtnAddLitecoin()
- JButton getBtnDeleteLitecoin()
- JLabel getLblUser()
- void addCrypto(String)
- void deleteCrypto(String)
- void habilitarBotones(String,boolean)
- void recolocarBotones()
- void activarBotones(String,JButton,JButton)
}
class org.ull.dap.app.connections.CryptocurrencyAPI {
- String URI_API
+ HttpRequest buildHttpRequest(String)
+ HttpResponse<String> sendHttpRequest(HttpRequest)
+ Asset getAssetData(String)
+ String getUriAPI()
}
class org.ull.dap.app.user.User {
- String name
- long id
- List<String> nameCryptos
- Map<String,Double> cryptoPrices
+ void update(String,double,VentanaNotificacion)
+ List<String> getNameCryptos()
+ Map<String,Double> getCryptoPrices()
+ void addCrypto(String)
+ void deleteCrypto(String)
+ String toString()
+ int hashCode()
}
interface org.ull.dap.app.connections.IConnectionAPI {
~ HttpRequest buildHttpRequest(String)
~ HttpResponse<String> sendHttpRequest(HttpRequest)
}
interface org.ull.dap.app.notifier.Observable {
~ void subscribe(IObserver)
~ void unsubscribe(IObserver)
~ void notifyObservers()
}
interface org.ull.dap.app.user.IObserver {
~ void update(String,double,VentanaNotificacion)
~ void addCrypto(String)
~ void deleteCrypto(String)
~ List<String> getNameCryptos()
}
class org.ull.dap.app.Main {
+ {static} void main(String[])
}


org.ull.dap.app.notifier.Observable <|.. org.ull.dap.app.notifier.CryptocurrencyNotifier
javax.swing.JFrame <|-- org.ull.dap.app.gui.VentanaNotificacion
org.ull.dap.app.gui.JFrame <|-- org.ull.dap.app.gui.VentanaPrincipal
org.ull.dap.app.connections.IConnectionAPI <|.. org.ull.dap.app.connections.CryptocurrencyAPI
org.ull.dap.app.user.IObserver <|.. org.ull.dap.app.user.User
@enduml